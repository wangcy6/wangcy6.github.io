<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>do book on Troy的网络博客</title>
    <link>https://wangcy6.github.io/categories/do-book/</link>
    <description>Recent content in do book on Troy的网络博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wangcy6.github.io/categories/do-book/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c&#43;&#43;代码编程规范</title>
      <link>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_class/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_class/</guid>
      <description>函数 参数传递：值传递 与引用传递 1 2 3 4 5 void usage(const string &amp;amp;name) { } 谈谈你对 const string &amp;amp; 数据结构 数组 初始化 1 2 char buf[128]; memset(buf, 0xcc, sizeof(buf)); map c++ map查找key 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>c&#43;&#43;入门指南</title>
      <link>https://wangcy6.github.io/post/c&#43;&#43;/01_c&#43;&#43;_new/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/c&#43;&#43;/01_c&#43;&#43;_new/</guid>
      <description>14400 内存管理 C++中通过new和delete两个关键字进行动态内存管理。 c语言通过 malloc 和free 两个关键字进行动态内存管理 函数支持重载，运算符同</description>
    </item>
    
  </channel>
</rss>
